@using  stvsystem.Data
@model SelectionItem
@{
    ViewData["Title"] = "Նախընտրելի թեկնածուներ";
    Layout = "~/Views/Shared/_LayoutNull.cshtml";
}

<div id="backButton">
    <a class="btn btn-primary btn-sm" href="@Url.Action("Index", "Home")"><i class="icons icon-action-undo"></i></a>
</div>

@using (Html.BeginForm("SaveSelectionItem", "Selection", FormMethod.Post, new { id = "frmCandidateSelection" }))
{
    @Html.HiddenFor(model => model.CredentialID)
    @Html.HiddenFor(model => model.CandidateIndex)
    @Html.HiddenFor(model => model.SelectionCount)
    @Html.HiddenFor(model => model.MaxSelectionCount)

    <div class="container-maxwidth500">
        <div class="card">
            <div class="card-header">
                <i class="icon icon-user-following"></i>
            @ViewData["Title"]
            </div>
            <div class="card-body">
                <div class="card">
                    <div class="card-body p-0 clearfix">
                        <i class="fa fa-check-square-o bg-primary p-4 font-2xl mr-3 float-left"></i>
                        <div class="h4 text-primary text-center pt-2">@Html.DisplayFor(model => model.CandidateIndex)</div>
                        <div class="text-muted text-center font-xs">@Html.LabelFor(model => model.CandidateIndex)</div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.CourtID, new { @class = "control-label" })
                    @(Html.Kendo().ComboBoxFor(model => model.CourtID)
                                            .DataTextField("Text")
                                            .DataValueField("Value")
                                            .Placeholder("-- Ընտրել --")
                                            .Filter(FilterType.StartsWith)
                                            .HtmlAttributes(new { @class = "form-control" })
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetCourts", "Selection");
                                                });
                                            })
                    )
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CandidateID, new { @class = "control-label" })
                    @(Html.Kendo().ComboBoxFor(model => model.CandidateID)
                                            .DataTextField("Text")
                                            .DataValueField("Value")
                                            .Placeholder("-- Ընտրել --")
                                            .Filter(FilterType.StartsWith)
                                            .HtmlAttributes(new { @class = "form-control" })
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetCandidates", "Selection")
                                                    .Data("filterCandidates");
                                                })
                                                .ServerFiltering(true);
                                            })
                                            .Enable(false)
                                              .AutoBind(false)
                                              .CascadeFrom("CourtID")
                    )
                    <script>
                        function filterCandidates() {
                            return {
                                courtID: $("#CourtID").val(),
                                candidateName: $("#CandidateID").data("kendoComboBox").input.val(),
                                credentialID: @Model.CredentialID,
                            }
                        }
                    </script>
                </div>

            </div>
            
            <div class="col-lg-12 align-right">

                @if (Model.CandidateIndex < Model.MaxSelectionCount)
                {
                    <hr />
                    <button type="submit" id="submitButton" name="submitButton" value="Continue" class="btn btn-primary"><i class="icons icon-arrow-right"></i>&nbsp;Շարունակել</button>
                }

                @if (Model.CandidateIndex > Model.SelectionCount-1)
                {
                    <hr />
                    <button type="submit" id="submitButton" name="submitButton" value="Confirm" class="btn btn-success"><i class="icons icon-check"></i>&nbsp;Ավարտել</button>
                }

                    <button type="submit" id="submitButton" name="submitButton" value="Cancel" class="btn btn-success"><i class="icons icon-check"></i>&nbsp;Չեղարկել</button>

                @Html.ValidationSummary("Առկա են խնդիրներ")
            </div>
        </div>
    </div>

}

<script>
    $(".validation-summary-errors").addClass("bg-warning")
    $("form").kendoValidator({
        errorTemplate: '<div class="k-widget k-tooltip k-tooltip-validation" style="margin:0.5em; padding:3px 5px;"><span class="fa fa-exclamation-triangle"></span> #=message#<div class="k-callout k-callout-n"></div></div>', // change the default message container to show only an *
        validate: function (e) { // handle the validate event to build the error list
            var html = "";
            if (!e.valid) {
                var errors = this.errors();
                html += "<ul>";
                for (var i = 0; i < errors.length; i++) {
                    html += "<li>" + errors[i] + "</li>";
                }
                html += "</ul>";
            }
            $("#errors").empty().append($(html));
        }
    });
</script>