@model IEnumerable<stvsystem.Data.CredentialItem>
@{
    Layout = "~/Views/Shared/_LayoutNull.cshtml";
    ViewData["Title"] = "Տպել";
}

<div id="Credentials">
    <div id="backButton">
        <a class="btn btn-primary btn-sm" href="@Url.Action("Index", "Credential")"><i class="icons icon-action-undo"></i></a>
    </div>

    <button id="print" class="k-button" style="position:fixed; height: 52px; top:0; left:50%; z-index:10000"><i class="fa fa-print"></i>&nbsp; Տպել</button>
    <div class="page-container hidden-on-narrow">
        @{int i = 0;}
        @foreach (var item in Model)
        {
            i++;
            if (i - 1 == 0 || (i - 1) % 4 == 0)
            {
                @Html.Raw("<div class='pdf-page size-a4'>");
            }

            <div class="passworBlock">
                <h3 style="text-align:center">@Html.DisplayNameFor(x => item.CredentialID): @item.CredentialID</h3>
                <hr />
                <p>
                    <span>Ընտրության անվանումը:</span><br />
                    @ViewBag.Setting.SelectionName
                </p>
                <p>
                    <span>Ընտրության ա/թ:</span> @ViewBag.Setting.SelectionDate.ToString("dd/MM/yyyy")
                </p>
                <p>
                    <span>Մեկնարկի ժամը:</span> @ViewBag.Setting.StartTime
                </p>
                <p>
                    <span>Ավարտի ժամը:</span> @ViewBag.Setting.FinishTime
                </p>
                <p>
                    <span>Թեկնածուների թիվը:</span> @ViewBag.Setting.SelectionCount
                </p>
                <p>
                    <span>Մասնակիցների թիվը:</span> @ViewBag.Setting.ParticipantCount
                </p>
                <hr />
                <p>
                    <span>
                        @Html.DisplayNameFor(x => item.Password):
                    </span>
                </p>
                <h1 style="text-align:center">
                    @item.Password
                </h1>
            </div>

            @if (i % 4 == 0 || i == Model.Count())
                {
                @Html.Raw("</div>");
                <span class="divider"></span>
            }
        }
    </div>
    <script>
        kendo.pdf.defineFont({
            "DejaVu Sans": "http://cdn.kendostatic.com/2017.2.621/styles/fonts/DejaVu/DejaVuSans.ttf",
            "DejaVu Sans|Bold": "http://cdn.kendostatic.com/2017.2.621/styles/fonts/DejaVu/DejaVuSans-Bold.ttf",
            "DejaVu Sans|Bold|Italic": "http://cdn.kendostatic.com/2017.2.621/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf",
            "DejaVu Sans|Italic": "http://cdn.kendostatic.com/2017.2.621/styles/fonts/DejaVu/DejaVuSans-Oblique.ttf"
        });
    </script>
    <script>
        $("#print")
            .click(function () {
                var draw = kendo.drawing;
                draw.drawDOM($(".page-container"), {
                    forcePageBreak: ".divider",
                    multiPage: true,
                    avoidLinks: true,
                    paperSize: "auto",
                    margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" }
                }).then(function (root) {
                    return draw.exportPDF(root);
                })
                    .done(function (data) {
                        kendo.saveAs({
                            dataURI: data,
                            fileName: 'Credentials.pdf',
                         proxyURL: "@Url.Action("Pdf_Export_Save", "Credential")"
                    });
                    return false;
                });
            });
    </script>
</div>
